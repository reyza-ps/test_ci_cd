# Name of your application. Used to uniquely configure containers.
service: jomcharge-hub

# Name of the container image.
image: reyzaps/jomcharge-hub

# Deploy to these servers.
servers:
  web:
    hosts:
      - 18.141.161.216
    cmd: "./bin/rails server -b 0.0.0.0"

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: reyzaps

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  clear:
    DB_HOST: 18.141.161.216
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD
    - POSTGRES_DB_HOST
    - OCPI_SCHEME
    - OCPI_BASE_URL

# Use a different ssh user than root
ssh:
  user: ubuntu

# Configure builder setup.
# builder:
#   args:
#     RUBY_VERSION: 3.2.2
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: postgres:15
    host: 18.141.161.216
    port: 5432
    env:
      clear:
        POSTGRES_USER: 'jomcharge'
        POSTGRES_DB: 'jomcharge_hub_db'
      secret:
        - POSTGRES_PASSWORD
        - POSTGRES_DB_HOST
    directories:
      - data:/var/lib/postgresql/data
    files:
      - db/staging.sql:/docker-entrypoint-initdb.d/setup.sql
  redis:
    image: redis:7.0
    host: 18.141.161.216
    port: 6379
    directories:
      - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
# asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2
